buildscript {
    ext {
        kotlinVersion = '1.3.11'
        springBootVersion = '2.1.1.RELEASE'
        gradleGitProperties = '1.+'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
        classpath("gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:${gradleGitProperties}")

    }
}

plugins {
    id 'com.palantir.docker' version '0.20.1'
    id "org.jmailen.kotlinter" version "1.20.1"
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.gorylenko.gradle-git-properties"

group = 'com.onimurasame'
version = '0.1.2'

ext {
    buildDate = new Date()
}

sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
    jcenter()
}


dependencies {
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    //implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-aop')
    
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
    
    implementation('org.springframework.data:spring-data-couchbase:3.1.3.RELEASE')
    implementation('org.springframework.data:spring-data-rest-webmvc')
    
    implementation('com.google.code.gson:gson:2.7')
    
    implementation('io.springfox:springfox-swagger2:2.9.2')
    implementation('io.springfox:springfox-swagger-ui:2.9.2')

    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

docker {
    name "${group}/myresume:${version}"
    tags 'latest'
    files bootJar
    pull true
    noCache true
}


processResources {
    filesMatching("**/application.yml") {
        expand(project.properties)
    }
}